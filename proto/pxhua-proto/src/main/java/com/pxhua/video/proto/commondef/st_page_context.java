// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.pxhua.video.proto.commondef;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class st_page_context {

	@TarsStructProperty(order = 0, isRequire = true)
	public int index = 0;
	@TarsStructProperty(order = 1, isRequire = true)
	public int total = 0;
	@TarsStructProperty(order = 2, isRequire = true)
	public int has_next = 0;

	public int getIndex() {
		return index;
	}

	public void setIndex(int index) {
		this.index = index;
	}

	public int getTotal() {
		return total;
	}

	public void setTotal(int total) {
		this.total = total;
	}

	public int getHas_next() {
		return has_next;
	}

	public void setHas_next(int has_next) {
		this.has_next = has_next;
	}

	public st_page_context() {
	}

	public st_page_context(int index, int total, int has_next) {
		this.index = index;
		this.total = total;
		this.has_next = has_next;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(index);
		result = prime * result + TarsUtil.hashCode(total);
		result = prime * result + TarsUtil.hashCode(has_next);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof st_page_context)) {
			return false;
		}
		st_page_context other = (st_page_context) obj;
		return (
			TarsUtil.equals(index, other.index) &&
			TarsUtil.equals(total, other.total) &&
			TarsUtil.equals(has_next, other.has_next) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(index, 0);
		_os.write(total, 1);
		_os.write(has_next, 2);
	}


	public void readFrom(TarsInputStream _is) {
		this.index = _is.read(index, 0, true);
		this.total = _is.read(total, 1, true);
		this.has_next = _is.read(has_next, 2, true);
	}

}
